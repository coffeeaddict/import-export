h1. ImportExport


A generic import and export plugin for rails, own implementation is required

h2. Dependencies


* FasterCSV


h2. Example Import 

To make a thingy that imports cards:

in @lib/imports.rb@

bc..  module Imports
    class CardsImport
      def import(row)
  
        # Card is an ActiveRecord
        card = Card.new
  
        row.headers.each { |name|
	  # lets assume the header matches the names of Card's attributes
          attr_name = name.downcase.gsub(/\s/, "_")
  
          card[attr_name] = row.field(name)
        }
   
        card.save
      end
    end
  end

In your controller:

bc.  include Imports
  ...
  import = CardsImport.new('/path/to/file.csv')
  import.run

Or for Delayed::Job (who needs imports right away?)

  Delayed::Job.enqueue CardsImport.new('/path/to/file.csv')

run is an alias for perform, so this will work out of the box


h2. Example Export 

To make something export

in @lib/exports.rb@

bc.  module Exports
    class CardsExport
      def header
        [ "NAME", "IMAGE", "COLOR" ]
      end
      def export(card)
        return card.attributes.values_at("name", "image", "color")
      end
    end
  end

in your controller

bc.  include Exports
  ...
  # export all sold out cards
  export = CardsExport.new( :col_sep => '|', :file => "sold_out" )
  export.collect { Cards.find(:all, :conditions => [ "sold_out=?", true ]) }
  export.run

This will make file named sold_out.csv in @RAILS_ROOT/tmp@.

To send the file to the user, just

bc.  return send_file(export.file, :type => "text/csv")


Copyright (c) 2009 Hartog C. de Mik, released under the MIT license
